{
  "1603032911401": [
    {
      "cardImgAlt": "Props和state",
      "descs": "\n                            \n                                PropsreactProps\n组件，概念上类似于JavaScript的函数，接受任意的入参（“props”），并返回用于描述页面展示内容的React元素。\n\nProps 只读性，无论是函数声明还是class声明，都不能修改自身的props\n                            \n                        ",
      "date": "\n                                2020-04-14\n                            "
    },
    {
      "cardImgAlt": "react搭建MPA多页面应用实战记录",
      "descs": "\n                            \n                                create-react-app创建的项目配置多入口MPA模式\nbug: 报Cannot read property ‘filter’ of undefined ——- fix bug\n\n\n原文参考感谢 一只小鸟er  原文链接：https\n                            \n                        ",
      "date": "\n                                2020-04-12\n                            "
    },
    {
      "cardImgAlt": "前端性能优化盘点（三）",
      "descs": "\n                            \n                                HTML/CSS/Js 页面加载渲染过程\n一个网站在浏览器端如何进行渲染？\n\n\n渲染分解解析过程\n\n1.html解析DOM tree\n2.css解析出Style Rules\n3.将二者关联生成Render Tree\n4.Layout根据re\n                            \n                        ",
      "date": "\n                                2020-04-11\n                            "
    },
    {
      "cardImgAlt": "react生命周期",
      "descs": "\n                            \n                                \n                            \n                        ",
      "date": "\n                                2020-04-11\n                            "
    },
    {
      "cardImgAlt": "前端性能优化盘点（二）",
      "descs": "\n                            \n                                页面性能优化02-图片1 .png8/png24/png32 区别\npng8 ———- 256色，支持透明\npng24 ———  2-24 色， 不支持透明\npng32 ——— 2– 24色， 支持透明\n\n2. 图片相关的优化- 不同格式图\n                            \n                        ",
      "date": "\n                                2020-04-10\n                            "
    },
    {
      "cardImgAlt": "前端性能优化盘点（一）",
      "descs": "\n                            \n                                前端性能优化（盘点一）前端性能优化\n\n网络层面\n构建层面\n浏览器渲染层面\n服务端层面\n\n功能区分\n\n资源合并与压缩\n\n图片的编码原理和类型选择\n\n浏览器的渲染机制\n\n濑加载预加载\n\n浏览器存储\n\n缓存机制\n\nPWA\n\nVue-ssr \n\n\n\n                            \n                        ",
      "date": "\n                                2020-04-09\n                            "
    },
    {
      "cardImgAlt": "前端面试",
      "descs": "\n                            \n                                \n                            \n                        ",
      "date": "\n                                2020-04-09\n                            "
    },
    {
      "cardImgAlt": "网络",
      "descs": "\n                            \n                                网络\nHTTP\n常见的状态码那些\n304表示什么和302区别\n介绍一下HTTP缓存策略\nConnection为keep-alive表示什么\n\n\nDNS\n介绍DNS\n\n\nTCP\n三次握手\n四次挥手\n\n\nHTTPS\n介绍HTTPS工作原理\nHT\n                            \n                        ",
      "date": "\n                                2020-04-09\n                            "
    },
    {
      "cardImgAlt": "My New blog",
      "descs": "\n                            \n                                程序员搭建技术博客神器 Hexo + github什么是 Hexo？Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页\n安装安装前提准备\nNode\n                            \n                        ",
      "date": "\n                                2020-04-08\n                            "
    },
    {
      "cardImgAlt": "Hello World",
      "descs": "\n                            \n                                Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hex\n                            \n                        ",
      "date": "\n                                2020-04-07\n                            "
    }
  ],
  "1603032970092": [
    {
      "cardImgAlt": "Props和state",
      "descs": "\n                            \n                                PropsreactProps\n组件，概念上类似于JavaScript的函数，接受任意的入参（“props”），并返回用于描述页面展示内容的React元素。\n\nProps 只读性，无论是函数声明还是class声明，都不能修改自身的props\n                            \n                        ",
      "date": "\n                                2020-04-14\n                            "
    },
    {
      "cardImgAlt": "react搭建MPA多页面应用实战记录",
      "descs": "\n                            \n                                create-react-app创建的项目配置多入口MPA模式\nbug: 报Cannot read property ‘filter’ of undefined ——- fix bug\n\n\n原文参考感谢 一只小鸟er  原文链接：https\n                            \n                        ",
      "date": "\n                                2020-04-12\n                            "
    },
    {
      "cardImgAlt": "前端性能优化盘点（三）",
      "descs": "\n                            \n                                HTML/CSS/Js 页面加载渲染过程\n一个网站在浏览器端如何进行渲染？\n\n\n渲染分解解析过程\n\n1.html解析DOM tree\n2.css解析出Style Rules\n3.将二者关联生成Render Tree\n4.Layout根据re\n                            \n                        ",
      "date": "\n                                2020-04-11\n                            "
    },
    {
      "cardImgAlt": "react生命周期",
      "descs": "\n                            \n                                \n                            \n                        ",
      "date": "\n                                2020-04-11\n                            "
    },
    {
      "cardImgAlt": "前端性能优化盘点（二）",
      "descs": "\n                            \n                                页面性能优化02-图片1 .png8/png24/png32 区别\npng8 ———- 256色，支持透明\npng24 ———  2-24 色， 不支持透明\npng32 ——— 2– 24色， 支持透明\n\n2. 图片相关的优化- 不同格式图\n                            \n                        ",
      "date": "\n                                2020-04-10\n                            "
    },
    {
      "cardImgAlt": "前端性能优化盘点（一）",
      "descs": "\n                            \n                                前端性能优化（盘点一）前端性能优化\n\n网络层面\n构建层面\n浏览器渲染层面\n服务端层面\n\n功能区分\n\n资源合并与压缩\n\n图片的编码原理和类型选择\n\n浏览器的渲染机制\n\n濑加载预加载\n\n浏览器存储\n\n缓存机制\n\nPWA\n\nVue-ssr \n\n\n\n                            \n                        ",
      "date": "\n                                2020-04-09\n                            "
    },
    {
      "cardImgAlt": "前端面试",
      "descs": "\n                            \n                                \n                            \n                        ",
      "date": "\n                                2020-04-09\n                            "
    },
    {
      "cardImgAlt": "网络",
      "descs": "\n                            \n                                网络\nHTTP\n常见的状态码那些\n304表示什么和302区别\n介绍一下HTTP缓存策略\nConnection为keep-alive表示什么\n\n\nDNS\n介绍DNS\n\n\nTCP\n三次握手\n四次挥手\n\n\nHTTPS\n介绍HTTPS工作原理\nHT\n                            \n                        ",
      "date": "\n                                2020-04-09\n                            "
    },
    {
      "cardImgAlt": "My New blog",
      "descs": "\n                            \n                                程序员搭建技术博客神器 Hexo + github什么是 Hexo？Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页\n安装安装前提准备\nNode\n                            \n                        ",
      "date": "\n                                2020-04-08\n                            "
    },
    {
      "cardImgAlt": "Hello World",
      "descs": "\n                            \n                                Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hex\n                            \n                        ",
      "date": "\n                                2020-04-07\n                            "
    }
  ]
}
